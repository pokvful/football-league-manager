CREATE or ALTER TRIGGER TRG_NO_UPDATES_ON_CURRENT_EDITION_CLUB ON CLUB
AFTER UPDATE, DELETE ,INSERT
AS
BEGIN
	IF @@rowcount = 0
		RETURN
	SET NOCOUNT ON

	IF EXISTS(
		SELECT 1
		FROM inserted i
		JOIN CLUB_PLAYS_IN_EDITION CPIE on i.CLUB_NAME = CPIE.CLUB_NAME
		JOIN EDITION E on CPIE.SEASON_NAME = E.SEASON_NAME and CPIE.COMPETITION_NAME = E.COMPETITION_NAME
		JOIN SEASON S on E.SEASON_NAME = S.SEASON_NAME
		WHERE S.END_DATE > GETDATE() AND S.START_DATE < GETDATE()
	)
    OR EXISTS(
		SELECT 1
		FROM deleted d
		JOIN CLUB_PLAYS_IN_EDITION CPIE on d.CLUB_NAME = CPIE.CLUB_NAME
		JOIN EDITION E on CPIE.SEASON_NAME = E.SEASON_NAME and CPIE.COMPETITION_NAME = E.COMPETITION_NAME
		JOIN SEASON S on E.SEASON_NAME = S.SEASON_NAME
		WHERE S.END_DATE > GETDATE() AND S.START_DATE < GETDATE()
	)
		THROW 50000, 'Season is still active, cannot alter data', 1
END
GO

CREATE or ALTER TRIGGER TRG_NO_UPDATES_ON_CURRENT_EDITION_MATCH ON MATCH
AFTER UPDATE, DELETE ,INSERT
AS
BEGIN
	IF @@rowcount = 0
		RETURN
	SET NOCOUNT ON


	IF (UPDATE(HOME_CLUB_NAME) OR UPDATE (OUT_CLUB_NAME) OR UPDATE(STADIUM_NAME) OR UPDATE(REFEREE_PERSON_ID))
		IF EXISTS(
	    SELECT *
	    FROM inserted i
	    JOIN MATCHDAY M2 on M2.SEASON_NAME = i.SEASON_NAME and M2.COMPETITION_NAME = i.COMPETITION_NAME and M2.START_DATE = i.START_DATE and M2.MATCH_DAY = i.MATCH_DAY
	    JOIN ROUND R2 on M2.SEASON_NAME = R2.SEASON_NAME and M2.COMPETITION_NAME = R2.COMPETITION_NAME and M2.START_DATE = R2.START_DATE
	    JOIN EDITION E on R2.SEASON_NAME = E.SEASON_NAME and R2.COMPETITION_NAME = E.COMPETITION_NAME
	    JOIN SEASON S on E.SEASON_NAME = S.SEASON_NAME
		WHERE S.END_DATE > GETDATE() AND S.START_DATE < GETDATE()
	)
			THROW 50000, 'Season is still active, cannot alter data', 1

	IF EXISTS(
	    SELECT *
	    FROM deleted d
	    JOIN MATCHDAY M2 on M2.SEASON_NAME = d.SEASON_NAME and M2.COMPETITION_NAME = d.COMPETITION_NAME and M2.START_DATE = d.START_DATE and M2.MATCH_DAY = d.MATCH_DAY
	    JOIN ROUND R2 on M2.SEASON_NAME = R2.SEASON_NAME and M2.COMPETITION_NAME = R2.COMPETITION_NAME and M2.START_DATE = R2.START_DATE
	    JOIN EDITION E on R2.SEASON_NAME = E.SEASON_NAME and R2.COMPETITION_NAME = E.COMPETITION_NAME
	    JOIN SEASON S on E.SEASON_NAME = S.SEASON_NAME
		WHERE S.END_DATE > GETDATE() AND S.START_DATE < GETDATE()
	)
			THROW 50000, 'Season is still active, cannot alter data', 1
END
GO

CREATE or ALTER TRIGGER TRG_NO_UPDATES_ON_CURRENT_EDITION_SEASON ON SEASON
AFTER UPDATE, DELETE ,INSERT
AS
BEGIN
	IF @@rowcount = 0
		RETURN
	SET NOCOUNT ON

	IF EXISTS(
	    SELECT 1
		FROM inserted
		WHERE END_DATE > GETDATE() AND START_DATE < GETDATE()
	)
    OR EXISTS(
        SELECT 1
        FROM deleted
		WHERE END_DATE > GETDATE() AND START_DATE < GETDATE()
	)
		THROW 50000, 'Season is still active, cannot alter data', 1
END
GO

CREATE or ALTER TRIGGER TRG_NO_UPDATES_ON_CURRENT_EDITION_COMPETITION ON COMPETITION
AFTER UPDATE, DELETE ,INSERT
AS
BEGIN
	IF @@rowcount = 0
		RETURN
	SET NOCOUNT ON

	IF EXISTS(
	    SELECT 1
		FROM inserted i
		JOIN EDITION E on i.COMPETITION_NAME = E.COMPETITION_NAME
		JOIN SEASON S ON S.SEASON_NAME = E.SEASON_NAME 
		WHERE END_DATE > GETDATE() AND START_DATE < GETDATE()
	)
    OR EXISTS(
        SELECT 1
        FROM deleted d
		JOIN EDITION E on d.COMPETITION_NAME = E.COMPETITION_NAME
		JOIN SEASON S ON S.SEASON_NAME = E.SEASON_NAME 
		WHERE END_DATE > GETDATE() AND START_DATE < GETDATE()
	)
		THROW 50000, 'Season is still active, cannot alter data', 1
END
GO

CREATE or ALTER TRIGGER TRG_NO_UPDATES_ON_CURRENT_EDITION_CIE ON CLUB_PLAYS_IN_EDITION
AFTER UPDATE, DELETE ,INSERT
AS
BEGIN
	IF @@rowcount = 0
		RETURN
	SET NOCOUNT ON

	IF EXISTS(
	    SELECT 1
		FROM inserted i
		JOIN EDITION E on i.COMPETITION_NAME = E.COMPETITION_NAME
		JOIN SEASON S ON S.SEASON_NAME = E.SEASON_NAME 
		WHERE END_DATE > GETDATE() AND START_DATE < GETDATE()
	)
    OR EXISTS(
        SELECT 1
        FROM deleted d
		JOIN EDITION E on d.COMPETITION_NAME = E.COMPETITION_NAME
		JOIN SEASON S ON S.SEASON_NAME = E.SEASON_NAME 
		WHERE END_DATE > GETDATE() AND START_DATE < GETDATE()
	)
		THROW 50000, 'Season is still active, cannot alter data', 1
END
GO