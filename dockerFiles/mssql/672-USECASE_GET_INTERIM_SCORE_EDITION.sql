
CREATE OR ALTER VIEW GOALS_MATCHES AS
WITH goalsClub AS (
SELECT MATCH_ID, CLUB_NAME FROM GOAL g JOIN PLAYER p ON g.PERSON_ID = p.PERSON_ID)
SELECT MATCH_ID, SEASON_NAME, COMPETITION_NAME, MATCH_DAY ,HOME_CLUB_NAME, OUT_CLUB_NAME , 
(SELECT COUNT(*) FROM goalsClub gc WHERE gc.MATCH_ID = m.MATCH_ID AND gc.CLUB_NAME = m.HOME_CLUB_NAME) as home_goals,
(SELECT COUNT(*) FROM goalsClub gc WHERE gc.MATCH_ID = m.MATCH_ID AND gc.CLUB_NAME = m.OUT_CLUB_NAME) as out_goals
FROM MATCH m
WHERE MATCH_DAY <= GETDATE()

GO
CREATE OR ALTER VIEW GOALS_CLUB_MATCH AS 
	SELECT MATCH_ID, SEASON_NAME, COMPETITION_NAME, 
	HOME_CLUB_NAME AS 'CLUB_NAME', 
	home_goals AS 'GOALS', 
	out_goals AS 'AGAINST_GOALS',
	CASE WHEN home_goals < out_goals THEN 'L' WHEN home_goals > out_goals THEN 'W' ELSE 'G' END  AS [type]
	FROM dbo.GOALS_MATCHES
UNION
	SELECT MATCH_ID, SEASON_NAME, COMPETITION_NAME, 
	OUT_CLUB_NAME AS 'CLUB_NAME', 
	out_goals AS 'GOALS', 
	home_goals AS 'AGAINST_GOALS',
	CASE WHEN home_goals < out_goals THEN 'W' WHEN home_goals > out_goals THEN 'L' ELSE 'G' END AS [type]
	FROM dbo.GOALS_MATCHES

GO
CREATE OR ALTER VIEW SCORE_EDITIONS AS
WITH summedStats AS (
SELECT SEASON_NAME, 
		COMPETITION_NAME, 
		CLUB_NAME, 
		COUNT(*) as GS ,
		SUM(GOALS) AS DV, 
		SUM(AGAINST_GOALS) AS DT 
FROM GOALS_CLUB_MATCH 
GROUP BY COMPETITION_NAME, SEASON_NAME, CLUB_NAME) -- tot goals
, winsClubEdition AS (
SELECT SEASON_NAME, COMPETITION_NAME, CLUB_NAME, count(*) as amount
FROM GOALS_CLUB_MATCH
WHERE [type] = 'W'
GROUP BY COMPETITION_NAME, SEASON_NAME, CLUB_NAME
)
, drawsClubEdition AS (
SELECT SEASON_NAME, COMPETITION_NAME, CLUB_NAME, count(*) as amount
FROM GOALS_CLUB_MATCH
WHERE [type] = 'G'
GROUP BY COMPETITION_NAME, SEASON_NAME, CLUB_NAME
)
, unranked_score AS (
SELECT  ss.COMPETITION_NAME, 
		ss.SEASON_NAME, 
		ss.CLUB_NAME, 
		ss.GS, 
		ISNULL(W.amount, 0) as [W], 
		ISNULL(G.amount, 0) as [G], 
		ss.GS - ISNULL(w.amount, 0) - ISNULL(g.amount, 0) as [L], 
		ss.DV, 
		ss.DT, 
		ss.DV - ss.DT as DS ,
		ISNULL(w.amount, 0) * 3 + ISNULL(g.amount, 0) as [Pt.]
FROM summedStats ss LEFT JOIN winsClubEdition W ON ss.SEASON_NAME = W.SEASON_NAME AND ss.COMPETITION_NAME = W.COMPETITION_NAME AND ss.CLUB_NAME = W.CLUB_NAME
					LEFT JOIN drawsClubEdition G ON ss.SEASON_NAME = G.SEASON_NAME AND ss.COMPETITION_NAME = G.COMPETITION_NAME AND ss.CLUB_NAME = G.CLUB_NAME)
SELECT RANK() OVER (PARTITION BY COMPETITION_NAME, SEASON_NAME ORDER BY [Pt.] DESC, DS DESC ,GS ASC) as [RANK], * FROM unranked_score

GO
CREATE OR ALTER PROCEDURE GET_SCORE_EDITION 
(@season SEASON_NAME, @competition COMPETITION_NAME)
AS
BEGIN
	SET NOCOUNT ON
	
	SELECT * FROM SCORE_EDITIONS WHERE COMPETITION_NAME = @competition AND SEASON_NAME = @season
END
